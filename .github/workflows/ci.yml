name: Go CI

# Trigger events for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# Jobs will be implemented incrementally in subsequent tasks
jobs:
  # Lint job will be implemented in subsequent tasks
  lint:
    name: Lint and Format
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Go environment
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          cache: true

      # Verify dependencies integrity
      - name: Verify dependencies
        run: go mod verify

      # Check code formatting
      - name: Check formatting
        run: |
          if [ -n "$(go fmt ./...)" ]; then
            echo "Code is not formatted, run 'go fmt ./...'"
            exit 1
          fi

      # Run static analysis
      - name: Run vet
        run: go vet ./...

      # Run comprehensive linting
      - name: Install and run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

  # Test job will be implemented in subsequent tasks
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Go environment
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          cache: true
      
      # Other steps will be implemented in their respective tasks

  # Build job will be implemented in subsequent tasks
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Go environment
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          cache: true
      
      # Other steps will be implemented in their respective tasks